#pragma kernel CSMain
#include "../DrawUtils.cginc"

float4 _Time;

float3 Start, End;
RWTexture2D<float4> Output;

struct Direction
{
    float3 Start, End;
}; 

StructuredBuffer<Direction> Directions;
uint DirectionsCount;


[numthreads(1,1,1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    uint width, height;
    Output.GetDimensions(width, height);
    const uint2 texSize = uint2(width, height);


    for (uint i = 0; i < DirectionsCount; i++)
    {
        Direction dir = Directions[i];
        DrawLine(Output, texSize, dir.Start.xy, dir.End.xy, float4(0,1, length(dir.End-dir.Start), .05));
    }
    
    DrawCircle(Output, texSize, Start.xy, 10, float4(1,0,0,1)); 
    DrawCircle(Output, texSize, End.xy, 5, float4(1,0,0,1)); 
    DrawLine(Output, texSize, Start.xy, End.xy, float4(1,0,0,1));
 
}



#pragma kernel CSBlend
[numthreads(32, 32,1)]
void CSBlend(uint3 id : SV_DispatchThreadID)
{
    Output[id.xy] = lerp(Output[id.xy], 0, 1);
}

